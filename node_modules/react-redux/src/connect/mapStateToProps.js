import { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps'

export function whenMapStateToPropsIsFunction(mapStateToProps) {
<<<<<<< HEAD
  return typeof mapStateToProps === 'function'
=======
  return (typeof mapStateToProps === 'function')
>>>>>>> e92a98c651a83bc5fb8e0cb59b332aa3266dba34
    ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps')
    : undefined
}

export function whenMapStateToPropsIsMissing(mapStateToProps) {
<<<<<<< HEAD
  return !mapStateToProps ? wrapMapToPropsConstant(() => ({})) : undefined
}

export default [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]
=======
  return (!mapStateToProps)
    ? wrapMapToPropsConstant(() => ({}))
    : undefined
}

export default [
  whenMapStateToPropsIsFunction,
  whenMapStateToPropsIsMissing
]
>>>>>>> e92a98c651a83bc5fb8e0cb59b332aa3266dba34
